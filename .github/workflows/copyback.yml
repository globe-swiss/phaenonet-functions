name: data copyback

on: workflow_dispatch

env:
  NODE_VERSION: "18"
  REGION: europe-west1

concurrency: copyback

permissions:
  contents: read
  id-token: write
jobs:
  fs-function-matrix:
    runs-on: ubuntu-22.04
    environment: phaenonet-test
    outputs:
      fs-functions: ${{ steps.fs-functions.outputs.functions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3.0.0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3.0.1
        with:
          project_id: phaenonet-test
      - id: fs-functions
        name: List Firestore Functions
        run: |
          echo 'functions<<EOF' >> $GITHUB_OUTPUT
          gcloud functions list --filter fs_ --format='json(name)' --project phaenonet-test >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
  delete-fs-functions:
    runs-on: ubuntu-22.04
    needs: fs-function-matrix
    environment: phaenonet-test
    strategy:
      matrix:
        function: ${{ fromJson(needs.fs-function-matrix.outputs.fs-functions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3.0.0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3.0.1
        with:
          project_id: phaenonet-test
      - name: Delete Function ${{ matrix.function.name }}
        run: gcloud functions delete $(echo ${{ matrix.function.name }} | cut -d/ -f6) --region $(echo ${{ matrix.function.name }} | cut -d/ -f4) --quiet --project phaenonet-test
  remove-extensions:
    runs-on: ubuntu-22.04
    environment: phaenonet-test
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Remove Firebase Extensions
        uses: ./.github/actions/remove-extensions
        with:
          project: phaenonet-test
          workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          node-version: ${{ env.NODE_VERSION }}
  remove-fs-data:
    runs-on: ubuntu-22.04
    needs: [delete-fs-functions, remove-extensions]
    environment: phaenonet-test
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v5.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: install firebase-tools
        run: npm i -g firebase-tools
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3.0.0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_BACKUP_ACCOUNT }}
          create_credentials_file: true
      - name: Delete Firestore Data
        run: firebase firestore:delete --all-collections --force --project phaenonet-test
  import-fs-data:
    runs-on: ubuntu-22.04
    needs: remove-fs-data
    environment: phaenonet-test
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3.0.0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_BACKUP_ACCOUNT }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3.0.1
        with:
          project_id: phaenonet-test
      - name: Find last backup
        run: echo "backup-folder=$(gsutil ls gs://phaenonet-backup-archive | tail -1)" >> $GITHUB_ENV
      - name: Import Data from ${{ env.backup-folder }}
        run: gcloud --project=phaenonet-test firestore import ${{ env.backup-folder }}
  install-functions:
    runs-on: ubuntu-22.04
    needs: import-fs-data
    permissions:
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: trigger function installation
        run: gh workflow run -f function=all "deploy cloud functions"
        env:
          GH_TOKEN: ${{ github.token }}
  deploy-extensions:
    runs-on: ubuntu-22.04
    needs: import-fs-data
    environment: phaenonet-test
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Deploy Firebase Extensions
        uses: ./.github/actions/deploy-extensions
        with:
          project: phaenonet-test
          workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          node-version: ${{ env.NODE_VERSION }}
  restore-users:
    runs-on: ubuntu-22.04
    needs:
      - install-functions
      - deploy-extensions
    steps:
      - name: call restore function
        uses: fjogeleit/http-request-action@v1.16.5
        with:
          url: "https://europe-west1-phaenonet-test.cloudfunctions.net/e2e_restore_data"
          timeout: 30000
