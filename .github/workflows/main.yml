name: Build and test

on: push

env:
  LANG: en_US.UTF-8

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    container: globeswiss/cloud-sdk:py3.9-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: pip3 install pipenv
      - name: Sync dev dependencies
        run: pipenv sync --dev
      - name: Check requirements file
        run: diff -w <(pipenv requirements | grep '==') <(grep '==' requirements.txt)
      - name: Check black
        run: pipenv run black --check phenoback test main.py
        if: ${{ always() }}
      - name: Check pylint
        run: pipenv run pylint --reports=y phenoback test main.py || exit $(($? % 4))
        if: ${{ always() }}
      - name: Check flake8
        run: pipenv run flake8 --statistics phenoback test main.py
        if: ${{ always() }}
      - name: Check bandit
        run: pipenv run bandit -r test phenoback -c .bandit
        if: ${{ always() }}
      - name: Run pytest
        run: pipenv run python -m pytest --cov-report xml --cov=main --cov=phenoback --cov-branch
        if: ${{ always() }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
        if: ${{ always() }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage.xml
        if: ${{ always() }}
  test-updated:
    runs-on: ubuntu-latest
    container: globeswiss/cloud-sdk:py3.9-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: pip3 install pipenv
      - name: Update pipenv environment
        run: pipenv update --dev
      - name: Test updated environment with pytest
        run: pipenv run python -m pytest
